local ProBacon = {}
local ui_dragging = false
local expanded_ui_pos
local ui_expanded = true
local ui_pill = false
local ui_pilled = false
getgenv().ui_background_color_scheme = {
	["Under the Lake"] = {
		ColorSequenceKeypoint.new(0.00, Color3.fromRGB(9, 48, 40)),
		ColorSequenceKeypoint.new(1.00, Color3.fromRGB(35, 122, 87))
	},
	["The Strain"] = {
		ColorSequenceKeypoint.new(0.00, Color3.fromRGB(135, 0, 0)),
		ColorSequenceKeypoint.new(1.00, Color3.fromRGB(25, 10, 5))
	},
	["Witching Houe"] = {
		ColorSequenceKeypoint.new(0.00, Color3.fromRGB(195, 20, 50)),
		ColorSequenceKeypoint.new(1.00, Color3.fromRGB(36, 11, 54))
	},
	["Back To Earth"] = {
		ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 201, 255)),
		ColorSequenceKeypoint.new(1.00, Color3.fromRGB(146, 254, 157))
	},
	["Sel"] = {
		ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 70, 127)),
		ColorSequenceKeypoint.new(1.00, Color3.fromRGB(165, 204, 130))
	},
	["Rainbow Blue"] = {
		ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 242, 96)),
		ColorSequenceKeypoint.new(1.00, Color3.fromRGB(5, 117, 230))
	},
	["Love and Liberty"] = {
		ColorSequenceKeypoint.new(0.00, Color3.fromRGB(32, 1, 34)),
		ColorSequenceKeypoint.new(1.00, Color3.fromRGB(111, 0, 0))
	},
	["Mindnight City"] = {
		ColorSequenceKeypoint.new(0.00, Color3.fromRGB(35, 37, 38)),
		ColorSequenceKeypoint.new(1.00, Color3.fromRGB(65, 67, 69))
	},
	["Influenza"] = {
		ColorSequenceKeypoint.new(0.00, Color3.fromRGB(192, 72, 72)),
		ColorSequenceKeypoint.new(1.00, Color3.fromRGB(72, 0, 72))
	},
	["Name"] = {
		ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0,0,0)),
		ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0,0,0))
	},
}

function ProBacon.CreateGui(title, background_color_template)
    local findcolorsequencesbyname = function(colorscheme)
        local colorsequences = {}
        for _, v in pairs(getgenv().ui_background_color_scheme[colorscheme]) do
            table.insert(colorsequences, v)
        end
        return colorsequences
    end
    title = title or "Pro Bacon Hub"
    local ProBaconUI = Instance.new("ScreenGui", game.CoreGui)
    local ui = Instance.new("Frame", ProBaconUI)
    local ui_base = Instance.new("Frame", ui)
    local ui_base_corner = Instance.new("UICorner", ui_base)
    ui_base_corner.CornerRadius = UDim.new(0,0)
    local UIGradient = Instance.new("UIGradient", ui_base)
    local title_bar = Instance.new("TextButton", ui_base)  --Text button bc idk why camera also moves on mobile
    local close = Instance.new("ImageButton", title_bar)
    local ui_title = Instance.new("TextLabel", title_bar)
    local minimize = Instance.new("ImageButton", title_bar)
    local tab_holder = Instance.new("ScrollingFrame", ui_base)
    local UIListLayout = Instance.new("UIListLayout", tab_holder)
    ProBaconUI.Name = "ProBaconUI"

    ui.Name = "ui"
    ui.AnchorPoint = Vector2.new(0.5, 0.5)
    ui.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ui.BackgroundTransparency = 1.000
    ui.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ui.BorderSizePixel = 0
    ui.Position = UDim2.new(0, workspace.CurrentCamera.ViewportSize.X / 2, 0, workspace.CurrentCamera.ViewportSize.Y / 2  - (game:GetService("GuiService"):GetGuiInset().Y/2))
    ui.Size = UDim2.new(0, 475, 0, 300)

    ui_base.Name = "ui_base"
    ui_base.AnchorPoint = Vector2.new(0.5, 0.5)
    ui_base.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ui_base.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ui_base.BorderSizePixel = 0
    ui_base.ClipsDescendants = true
    ui_base.Position = UDim2.new(0.5, 0, 0.5, -15)
    ui_base.Size = UDim2.new(0, 475, 0, 285)

    background_color_template = background_color_template or "Under the Lake"
    UIGradient.Color = ColorSequence.new{unpack(findcolorsequencesbyname(background_color_template))}

    title_bar.Name = "title_bar"
    title_bar.AnchorPoint = Vector2.new(0.5, 0.5)
    title_bar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    title_bar.BackgroundTransparency = 1.000
    title_bar.BorderColor3 = Color3.fromRGB(0, 0, 0)
    title_bar.BorderSizePixel = 0
    title_bar.Position = UDim2.new(0.5, 0, 0, 12)
    title_bar.Size = UDim2.new(1, 0, 0, 24)
    --Button prop
    title_bar.TextTransparency = 1
    title_bar.Text = ""
    title_bar.AutoButtonColor = false

    close.Name = "close"
    close.AnchorPoint = Vector2.new(1, 0.5)
    close.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    close.BackgroundTransparency = 1.000
    close.BorderColor3 = Color3.fromRGB(0, 0, 0)
    close.BorderSizePixel = 0
    close.Position = UDim2.new(1, -2, 0.5, 0)
    close.Size = UDim2.new(0, 20, 0, 20)
    close.Image = "rbxassetid://3926305904"
    close.ImageRectOffset = Vector2.new(284, 4)
    close.ImageRectSize = Vector2.new(24, 24)


    ui_title.Name = "ui_title"
    ui_title.AnchorPoint = Vector2.new(0, 0.5)
    ui_title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ui_title.BackgroundTransparency = 1.000
    ui_title.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ui_title.BorderSizePixel = 0
    ui_title.Position = UDim2.new(0, 7, 0.5, 0)
    ui_title.Size = UDim2.new(0.5, 0, 0, 20)
    ui_title.Font = Enum.Font.SourceSans
    ui_title.Text = title
    ui_title.TextColor3 = Color3.fromRGB(255, 255, 255)
    ui_title.TextSize = 15.000
    ui_title.TextXAlignment = Enum.TextXAlignment.Left

    minimize.Name = "minimize"
    minimize.AnchorPoint = Vector2.new(1, 0.5)
    minimize.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    minimize.BackgroundTransparency = 1.000
    minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
    minimize.BorderSizePixel = 0
    minimize.Position = UDim2.new(1, -24, 0.5, 0)
    minimize.Size = UDim2.new(0, 14, 0, 14)
    minimize.Image = "rbxassetid://3926305904"
    minimize.ImageRectOffset = Vector2.new(250, 210)
    minimize.ImageRectSize = Vector2.new(24, 24)

    tab_holder.Name = "tab_holder"
    tab_holder.Active = true
    tab_holder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tab_holder.BackgroundTransparency = 1.000
    tab_holder.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tab_holder.BorderSizePixel = 0
    tab_holder.Position = UDim2.new(0, 6, 0, 29)
    tab_holder.Size = UDim2.new(0, 100, 0, 249)
    tab_holder.CanvasSize = UDim2.new(0, 0, 0, 0)
    tab_holder.ScrollBarThickness = 0

    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Padding = UDim.new(0, 5)

    local drag_to_move_gesture = Instance.new("Frame", ui)
    local UICorner_15 = Instance.new("UICorner", drag_to_move_gesture)
    drag_to_move_gesture.Name = "drag_to_move_gesture"
    drag_to_move_gesture.AnchorPoint = Vector2.new(0.5, 0)
    drag_to_move_gesture.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    drag_to_move_gesture.BackgroundTransparency = 1.000
    drag_to_move_gesture.BorderColor3 = Color3.fromRGB(0, 0, 0)
    drag_to_move_gesture.BorderSizePixel = 0
    drag_to_move_gesture.Position = UDim2.new(0.5, 0, 0, 285)
    drag_to_move_gesture.Size = UDim2.new(0, 150, 0, 3)
    UICorner_15.CornerRadius = UDim.new(1, 0)


    local ui_base_gradient = ui_base.UIGradient
    local function updatetabcanvas()
        local canvastween = game:GetService("TweenService"):Create(tab_holder, TweenInfo.new(0.15, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {CanvasSize = UDim2.new(0, 0, 0, tab_holder.UIListLayout.AbsoluteContentSize.Y+1)})
        canvastween:Play()
        canvastween.Completed:Wait()
    end
    tab_holder.ChildAdded:Connect(updatetabcanvas)

    ui_base.Size = UDim2.new(0,0,0,0)
    function ProBacon:toggle_ui(state)
    	local tween
    	if state then
    		tween = game:GetService("TweenService"):Create(ui_base, TweenInfo.new(0.25), {Size = UDim2.new(0, 475, 0, 285)})
    	else
    		tween = game:GetService("TweenService"):Create(ui_base, TweenInfo.new(0.25), {Size = UDim2.new(0,0,0,0)})
    	end
    	tween:Play()
    	tween.Completed:Wait()
    end
    local ui_background_rotation = game:GetService("RunService").Stepped:Connect(function()
    	ui_base_gradient.Color = ColorSequence.new{unpack(findcolorsequencesbyname(background_color_template))}
    	ui_base_gradient.Rotation = ui_base_gradient.Rotation + 1
    end)

    close.MouseButton1Click:Connect(function()
        if close.ImageTransparency ~= 1 then
            ProBacon:toggle_ui(false)
            ProBaconUI:Destroy()
        end
    end)
    minimize.MouseButton1Click:Connect(function()
        game:GetService("TweenService"):Create(ui_base_corner, TweenInfo.new(0.25, Enum.EasingStyle.Quint), {CornerRadius = UDim.new(0,10)})
        game:GetService("TweenService"):Create(ui_base, TweenInfo.new(0.25, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 100, 0, 100)})
    end)
    

    local setpill = function(state)
    	local time = 0.25
    	if state then
            local topill = game:GetService("TweenService"):Create(ui_base, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Size = UDim2.new(0, 200, 0, 75)})
    		topill:Play()
    		topill.Completed:Wait()
            if ui_pill then
                ui_base.title_bar.ui_title.TextSize = 20
    		    ui_base.title_bar.close.Size = UDim2.new(0,20,0,20)
    		    ui_base.title_bar.close.Position = UDim2.new(1, -10, 0.5, 0)
    		    ui_base.title_bar.Size = UDim2.new(0, 200, 0, 75)
    		    local tween = game:GetService("TweenService"):Create(ui_base.title_bar.ui_title, TweenInfo.new(time, Enum.EasingStyle.Cubic), {TextTransparency = 0})
    		    tween:Play()
    		    game:GetService("TweenService"):Create(ui_base.title_bar.close, TweenInfo.new(time, Enum.EasingStyle.Cubic), {ImageTransparency = 0}):Play()
    		    game:GetService("TweenService"):Create(ui_base.title_bar, TweenInfo.new(time, Enum.EasingStyle.Cubic), {Size = UDim2.new(0, 200, 0, 75)}):Play()
    		    game:GetService("TweenService"):Create(ui_base.title_bar, TweenInfo.new(time, Enum.EasingStyle.Cubic), {Position = UDim2.new(0.5,0,0.5,0)}):Play()
    		    tween.Completed:Wait()
            end
    	else
    		local tween = game:GetService("TweenService"):Create(ui_base.title_bar.ui_title, TweenInfo.new(time, Enum.EasingStyle.Cubic), {TextTransparency = 0})
    		tween:Play()
            game:GetService("TweenService"):Create(ui_base.title_bar, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Size = UDim2.new(1,0,0,24)}):Play()
    		game:GetService("TweenService"):Create(ui_base.title_bar.close, TweenInfo.new(time, Enum.EasingStyle.Cubic), {ImageTransparency = 1}):Play()
    		game:GetService("TweenService"):Create(ui_base.title_bar.ui_title, TweenInfo.new(time, Enum.EasingStyle.Cubic), {TextTransparency = 1}):Play()
    		game:GetService("TweenService"):Create(ui_base.title_bar, TweenInfo.new(time, Enum.EasingStyle.Cubic), {Size = UDim2.new(1,0,0,0)}):Play()
    		game:GetService("TweenService"):Create(ui_base.title_bar, TweenInfo.new(time, Enum.EasingStyle.Cubic), {Position = UDim2.new(0.5,0,0,12)}):Play()
    		tween.Completed:Wait()
            if not ui_pill then
    		    ui_base.title_bar.Size = UDim2.new(0, 475, 0, 285)
    		    ui_base.title_bar.close.Position = UDim2.new(1, -2, 0.5, 0)
    		    ui_base.title_bar.ui_title.TextSize = 15
    		    ui_base.title_bar.close.Size = UDim2.new(0,20,0,20)
                game:GetService("TweenService"):Create(ui_base, TweenInfo.new(0.5, Enum.EasingStyle.Circular, Enum.EasingDirection.Out), {Size = UDim2.new(0, 75, 0, 75)}):Play()
    		    task.wait(0.35)
            end
    	end
    end
    local setdot = function(state, time)
    	time = time or 0.5
    	state = not state
    	local transparency
    	if state then
    		transparency = 0
    	else
    		transparency = 1
    	end
    	ui_base.tab_holder.Visible = state
    	for _,v in pairs(ui_base:GetChildren()) do
    		if v.Name == "content_holder" then
                if state and v:FindFirstChild("isThisContent").Value then
                    v.Visible = true
                else
                    v.Visible = false
                end
    		end
    	end
    	game:GetService("TweenService"):Create(ui_base.title_bar.ui_title, TweenInfo.new(time/5, Enum.EasingStyle.Cubic), {TextTransparency = transparency}):Play()
    	game:GetService("TweenService"):Create(ui_base.title_bar.close, TweenInfo.new(time/5, Enum.EasingStyle.Cubic), {ImageTransparency = transparency}):Play()
    	game:GetService("TweenService"):Create(ui_base.title_bar.minimize, TweenInfo.new(time/5, Enum.EasingStyle.Cubic), {ImageTransparency = transparency}):Play()
        ui_base.title_bar.Size = UDim2.new(1,0,0,24)
    end
    ui_base.title_bar.minimize.MouseButton1Click:Connect(function()
    	if ui_expanded then
    		expanded_ui_pos = ui_base.Position
    		ui_expanded = false
    		local change_ui_shape = game:GetService("TweenService"):Create(ui_base_corner, TweenInfo.new(0.5, Enum.EasingStyle.Cubic), {CornerRadius = UDim.new(0.5,0)})
    		change_ui_shape:Play()
    		game:GetService("TweenService"):Create(ui_base, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Size = UDim2.new(0, 75, 0, 75)}):Play()
            game:GetService("TweenService"):Create(ui_base.title_bar, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Size = UDim2.new(0.5,0,0,0)}):Play()
    		game:GetService("TweenService"):Create(ui_base, TweenInfo.new(0.5, Enum.EasingStyle.Cubic), {Position = UDim2.new(0.5, 0, 0, 10)}):Play()
    		game:GetService("TweenService"):Create(ui_base, TweenInfo.new(0.5, Enum.EasingStyle.Cubic), {AnchorPoint = Vector2.new(0.5,0)}):Play()
    		task.wait(0.25)
    		if not ui_expanded then
    			setdot(true)
    		end
    		change_ui_shape.Completed:Wait()
    		task.wait(0.5)
    		if not ui_expanded then
    			if not ui_expanded then
    				ui_pill = true
    				setpill(true)
                    ui_pilled = true
    			end
    		end
    	end
    end)
    local expand_ui = function()
    	if not ui_expanded then
    		ui_expanded = true
            game:GetService("TweenService"):Create(ui_base.title_bar, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Size = UDim2.new(1,0,0,24)}):Play()
    		if ui_pill then
                ui_pill = false
    			setpill(false)
                ui_pilled = false
    		end
    		if ui_expanded then
    			setdot(false)
                game:GetService("TweenService"):Create(ui_base.title_bar.ui_title, TweenInfo.new(0.5, Enum.EasingStyle.Cubic), {TextTransparency = 0}):Play()
    			game:GetService("TweenService"):Create(ui_base_corner, TweenInfo.new(0.5, Enum.EasingStyle.Cubic), {CornerRadius = UDim.new(0,0)}):Play()
    			game:GetService("TweenService"):Create(ui_base, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Size = UDim2.new(0, 475, 0, 285)}):Play()
    			game:GetService("TweenService"):Create(ui_base, TweenInfo.new(0.5, Enum.EasingStyle.Cubic), {AnchorPoint = Vector2.new(0.5,0.5)}):Play()
    			game:GetService("TweenService"):Create(ui_base, TweenInfo.new(0.5, Enum.EasingStyle.Cubic), {Position = expanded_ui_pos}):Play()
    		end
    	end
    end

    ui_base.InputBegan:Connect(function(input)
        local lastmouseloc = game:GetService("UserInputService"):GetMouseLocation()
        local input_begine_time
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            input_begine_time = os.clock()
            input.Changed:Connect(function()
                local mouseloc = game:GetService("UserInputService"):GetMouseLocation()
                if input.UserInputState == Enum.UserInputState.End and (os.clock()-input_begine_time < 0.3) and math.abs(mouseloc.X-lastmouseloc.X)<2 and math.abs(mouseloc.Y-lastmouseloc.Y)<2 then
                    expand_ui()
                end
            end)
        end
    end)
    local dragInput, mousePos, framePos, input_begine_time
    title_bar.InputBegan:Connect(function(input)
        local lastmouseloc = game:GetService("UserInputService"):GetMouseLocation()
        if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and (ui_pilled or ui_expanded) then
            ui_dragging, input_begine_time, mousePos, framePos = true, os.clock(), input.Position, ui.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    ui_dragging = false
                    local mouseloc = game:GetService("UserInputService"):GetMouseLocation()
                    if (os.clock()-input_begine_time < 0.3) and math.abs(mouseloc.X-lastmouseloc.X)<2 and math.abs(mouseloc.Y-lastmouseloc.Y)<2 then
                        expand_ui()
                    end
                end
            end)
        end
    end)
    title_bar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and ui_dragging then
            local delta = input.Position - mousePos
            ui.Position  = UDim2.new(framePos.X.Scale, framePos.X.Offset + delta.X, framePos.Y.Scale, framePos.Y.Offset + delta.Y)
        end
    end)


    local Tabs = {}

    function Tabs:CreateTab(name, selectedAsCurrTab)
        name = name or "Tab Button"
        selectedAsCurrTab = selectedAsCurrTab or false
        local content_holder = Instance.new("ScrollingFrame", ui_base)
        local UIListLayout_2 = Instance.new("UIListLayout", content_holder)
        local UIPadding = Instance.new("UIPadding", content_holder)
        UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout_2.Padding = UDim.new(0, 5)
        UIPadding.PaddingRight = UDim.new(0, 5)
        content_holder.Name = "content_holder"
        content_holder.Active = true
        content_holder.AnchorPoint = Vector2.new(1, 0)
        content_holder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        content_holder.BackgroundTransparency = 1.000
        content_holder.BorderColor3 = Color3.fromRGB(0, 0, 0)
        content_holder.BorderSizePixel = 0
        content_holder.Position = UDim2.new(1, -6, 0, 29)
        content_holder.Size = UDim2.new(0, 357, 0, 249)
        content_holder.ScrollBarThickness = 3
        local currcontentvar = Instance.new("BoolValue", content_holder)
        currcontentvar.Name = "isThisContent"

        local tab = Instance.new("TextButton", tab_holder)
        Instance.new("UICorner", tab)
        tab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        tab.BackgroundTransparency = 0.750
        tab.BorderColor3 = Color3.fromRGB(0, 0, 0)
        tab.BorderSizePixel = 0
        tab.Size = UDim2.new(1, 0, 0, 25)
        tab.AutoButtonColor = false
        tab.Font = Enum.Font.SourceSansBold
        tab.Text = name
        tab.TextColor3 = Color3.fromRGB(255, 255, 255)
        tab.TextSize = 14.000
        table.insert(Tabs, name)

        local function updatecanvasize()
            local canvastween = game:GetService("TweenService"):Create(content_holder, TweenInfo.new(0.15, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {CanvasSize = UDim2.new(0, 0, 0, content_holder.UIListLayout.AbsoluteContentSize.Y+1)})
            canvastween:Play()
            canvastween.Completed:Wait()
        end
        content_holder.ChildAdded:Connect(updatecanvasize)
        local switch_to_this_tab = function()
            task.spawn(function()
                updatecanvasize()
            end)
            task.spawn(function()
                for _, v in ipairs(tab_holder:GetChildren()) do
                    if v == tab then
                        game:GetService("TweenService"):Create(v,TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In),{BackgroundTransparency = 0.7}):Play()
                    elseif v.Name == "TextButton" then
                        game:GetService("TweenService"):Create(v, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 1}):Play()
                    end
                end
            end)
            task.spawn(function()
                for _, v in ipairs(ui_base:GetChildren()) do
                    if v == content_holder then
                        v.Visible = true
                        currcontentvar.Value = true
                    elseif v.Name == "content_holder" then
                        v.Visible = false
                        currcontentvar.Value = false
                    end
                end
            end)
        end

        if #Tabs == 1 then
            switch_to_this_tab()
        else
            content_holder.Visible = false
            tab.BackgroundTransparency = 1
        end
        if selectedAsCurrTab then
            switch_to_this_tab()
        end
        tab.MouseButton1Click:Connect(switch_to_this_tab)
        local TabFunctions = {}
        function TabFunctions:UpdateTab(tab_instance, name)
            if table.find(Tabs, tab_instance.Name) then
                name = name or "Tab"
                tab_instance.Text = name
                Tabs[table.find(Tabs, tab_instance.Name)] = name
            end
        end

        function TabFunctions:CreateSection(section_name, hidden)
            section_name = section_name or "Section"
            local section = Instance.new("TextLabel", content_holder)
            section.Name = "section"
            section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            section.BackgroundTransparency = 1.000
            section.BorderColor3 = Color3.fromRGB(0, 0, 0)
            section.BorderSizePixel = 0
            section.Size = UDim2.new(1, 0, 0, 25)
            section.Font = Enum.Font.SourceSansBold
            section.Text = "--------["..section_name.."]--------"
            section.TextColor3 = Color3.fromRGB(255, 255, 255)
            section.TextSize = 20.000
            section.TextWrapped = false
            if hidden then
                section.Visible = false
            else
                section.Visible = true
            end

            local Contents = {}
            function Contents:CreateLabel(content)
                local LabelFunctions = {}
                content = content or "Label"
                local label = Instance.new("TextLabel", content_holder)
                Instance.new("UICorner", label)
                label.Name = "label"
                label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                label.BackgroundTransparency = 1.000
                label.BorderColor3 = Color3.fromRGB(0, 0, 0)
                label.BorderSizePixel = 0
                label.Size = UDim2.new(0.899999976, 0, 0, 20)
                label.Font = Enum.Font.SourceSansItalic
                label.Text = "` "..content
                label.TextColor3 = Color3.fromRGB(255, 255, 255)
                label.TextSize = 14.000
                label.TextXAlignment = Enum.TextXAlignment.Left
                function LabelFunctions:UpdateLabel(newContent)
                    label.Text = "` "..newContent
                end
                return LabelFunctions
            end
            function Contents:CreateButton(button_content, info, callback, btn_inactive)
                local ButtonFunctions = {}
                button_content = button_content or "Button"
                info = info or "Information"
                callback = callback or function() end
                btn_inactive = btn_inactive or false
            
                local button = Instance.new("TextButton", content_holder)
                Instance.new("UICorner", button)
                local ImageButton = Instance.new("ImageButton", button)
                local button_icon = Instance.new("ImageLabel", button)
                local content = Instance.new("TextLabel", button)
                button.Name = "button"
                button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                button.BackgroundTransparency = 0.700
                button.BorderColor3 = Color3.fromRGB(0, 0, 0)
                button.BorderSizePixel = 0
                button.Size = UDim2.new(0.975000024, 0, 0, 25)
                button.Font = Enum.Font.SourceSans
                button.Text = ""
                button.TextColor3 = Color3.fromRGB(0, 0, 0)
                button.TextSize = 14.000
                ImageButton.AnchorPoint = Vector2.new(1, 0.5)
                ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                ImageButton.BackgroundTransparency = 1.000
                ImageButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
                ImageButton.BorderSizePixel = 0
                ImageButton.Position = UDim2.new(1, -5, 0.5, 0)
                ImageButton.Size = UDim2.new(0, 20, 0, 20)
                ImageButton.Image = "rbxassetid://3926305904"
                ImageButton.ImageRectOffset = Vector2.new(764, 764)
                ImageButton.ImageRectSize = Vector2.new(36, 36)
                button_icon.Name = "button_icon"
                button_icon.AnchorPoint = Vector2.new(0, 0.5)
                button_icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                button_icon.BackgroundTransparency = 1.000
                button_icon.BorderColor3 = Color3.fromRGB(0, 0, 0)
                button_icon.BorderSizePixel = 0
                button_icon.Position = UDim2.new(0, 5, 0.5, 0)
                button_icon.Size = UDim2.new(0, 20, 0, 20)
                button_icon.Image = "rbxassetid://3926305904"
                button_icon.ImageRectOffset = Vector2.new(84, 204)
                button_icon.ImageRectSize = Vector2.new(36, 36)
                content.Name = "content"
                content.AnchorPoint = Vector2.new(0, 0.5)
                content.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                content.BackgroundTransparency = 1.000
                content.BorderColor3 = Color3.fromRGB(0, 0, 0)
                content.BorderSizePixel = 0
                content.Position = UDim2.new(0, 30, 0.5, 0)
                content.Size = UDim2.new(0.75, 0, 1, 0)
                content.Font = Enum.Font.SourceSans
                content.Text = button_content
                if btn_inactive then
                    content.TextColor3 = Color3.fromRGB(255, 100, 100)
                else
                    content.TextColor3 = Color3.fromRGB(255, 255, 255)
                end
                content.TextSize = 14.000
                content.TextXAlignment = Enum.TextXAlignment.Left

                button.MouseButton1Click:Connect(function()
                    callback()
                end)
                function ButtonFunctions:UpdateButton(newContent, newInfo)
                    content.Text = newContent
                    info = newInfo
                end
                return ButtonFunctions
            end
            return Contents
        end
        return TabFunctions
    end
    return Tabs
end
return ProBacon


--[[
    --toggle
    local toggle = Instance.new("TextButton", content_holder)
    Instance.new("UICorner", toggle)
    local ImageButton_2 = Instance.new("ImageButton", toggle)
    local toggle_icon = Instance.new("ImageLabel", toggle)
    local content_2 = Instance.new("TextLabel", toggle)
    toggle.Name = "toggle"
    toggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    toggle.BackgroundTransparency = 0.700
    toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
    toggle.BorderSizePixel = 0
    toggle.Size = UDim2.new(0.975000024, 0, 0, 25)
    toggle.Font = Enum.Font.SourceSans
    toggle.Text = ""
    toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
    toggle.TextSize = 14.000
    ImageButton_2.AnchorPoint = Vector2.new(1, 0.5)
    ImageButton_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ImageButton_2.BackgroundTransparency = 1.000
    ImageButton_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ImageButton_2.BorderSizePixel = 0
    ImageButton_2.Position = UDim2.new(1, -5, 0.5, 0)
    ImageButton_2.Size = UDim2.new(0, 20, 0, 20)
    ImageButton_2.Image = "rbxassetid://3926305904"
    ImageButton_2.ImageRectOffset = Vector2.new(764, 764)
    ImageButton_2.ImageRectSize = Vector2.new(36, 36)
    toggle_icon.Name = "toggle_icon"
    toggle_icon.AnchorPoint = Vector2.new(0, 0.5)
    toggle_icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    toggle_icon.BackgroundTransparency = 1.000
    toggle_icon.BorderColor3 = Color3.fromRGB(0, 0, 0)
    toggle_icon.BorderSizePixel = 0
    toggle_icon.Position = UDim2.new(0, 5, 0.5, 0)
    toggle_icon.Size = UDim2.new(0, 20, 0, 20)
    toggle_icon.Image = "rbxassetid://3926309567"
    toggle_icon.ImageRectOffset = Vector2.new(628, 420)
    toggle_icon.ImageRectSize = Vector2.new(48, 48)
    content_2.Name = "content"
    content_2.AnchorPoint = Vector2.new(0, 0.5)
    content_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    content_2.BackgroundTransparency = 1.000
    content_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
    content_2.BorderSizePixel = 0
    content_2.Position = UDim2.new(0, 30, 0.5, 0)
    content_2.Size = UDim2.new(0.75, 0, 1, 0)
    content_2.Font = Enum.Font.SourceSans
    content_2.Text = "Toggle Me!"
    content_2.TextColor3 = Color3.fromRGB(255, 255, 255)
    content_2.TextSize = 14.000
    content_2.TextXAlignment = Enum.TextXAlignment.Left



    --warn_label
    local warn_label = Instance.new("TextButton", content_holder)
    Instance.new("UICorner", warn_label)
    local warning_icon = Instance.new("ImageLabel", warn_label)
    local content_3 = Instance.new("TextLabel", warn_label)
    warn_label.Name = "warn_label"
    warn_label.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
    warn_label.BackgroundTransparency = 0.700
    warn_label.BorderColor3 = Color3.fromRGB(0, 0, 0)
    warn_label.BorderSizePixel = 0
    warn_label.Size = UDim2.new(0.975000024, 0, 0, 25)
    warn_label.AutoButtonColor = false
    warn_label.Font = Enum.Font.SourceSans
    warn_label.Text = ""
    warn_label.TextColor3 = Color3.fromRGB(0, 0, 0)
    warn_label.TextSize = 14.000
    warning_icon.Name = "warning_icon"
    warning_icon.AnchorPoint = Vector2.new(0, 0.5)
    warning_icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    warning_icon.BackgroundTransparency = 1.000
    warning_icon.BorderColor3 = Color3.fromRGB(0, 0, 0)
    warning_icon.BorderSizePixel = 0
    warning_icon.Position = UDim2.new(0, 5, 0.5, 0)
    warning_icon.Size = UDim2.new(0, 20, 0, 20)
    warning_icon.Image = "rbxassetid://3926305904"
    warning_icon.ImageRectOffset = Vector2.new(364, 324)
    warning_icon.ImageRectSize = Vector2.new(36, 36)
    content_3.Name = "content"
    content_3.AnchorPoint = Vector2.new(0, 0.5)
    content_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    content_3.BackgroundTransparency = 1.000
    content_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
    content_3.BorderSizePixel = 0
    content_3.Position = UDim2.new(0, 30, 0.5, 0)
    content_3.Size = UDim2.new(0.75, 0, 1, 0)
    content_3.Font = Enum.Font.SourceSans
    content_3.Text = "warn_label!"
    content_3.TextColor3 = Color3.fromRGB(255, 255, 255)
    content_3.TextSize = 14.000
    content_3.TextXAlignment = Enum.TextXAlignment.Left

    --error_label
    local error_label = Instance.new("TextButton", content_holder)
    Instance.new("UICorner", error_label)
    local button_icon_2 = Instance.new("ImageLabel", error_label)
    local content_4 = Instance.new("TextLabel", error_label)
    error_label.Name = "error_label"
    error_label.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    error_label.BackgroundTransparency = 0.700
    error_label.BorderColor3 = Color3.fromRGB(0, 0, 0)
    error_label.BorderSizePixel = 0
    error_label.Size = UDim2.new(0.975000024, 0, 0, 25)
    error_label.AutoButtonColor = false
    error_label.Font = Enum.Font.SourceSans
    error_label.Text = ""
    error_label.TextColor3 = Color3.fromRGB(0, 0, 0)
    error_label.TextSize = 14.000
    button_icon_2.Name = "button_icon"
    button_icon_2.AnchorPoint = Vector2.new(0, 0.5)
    button_icon_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    button_icon_2.BackgroundTransparency = 1.000
    button_icon_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
    button_icon_2.BorderSizePixel = 0
    button_icon_2.Position = UDim2.new(0, 5, 0.5, 0)
    button_icon_2.Size = UDim2.new(0, 20, 0, 20)
    button_icon_2.Image = "rbxassetid://3926305904"
    button_icon_2.ImageRectOffset = Vector2.new(884, 524)
    button_icon_2.ImageRectSize = Vector2.new(36, 36)
    content_4.Name = "content"
    content_4.AnchorPoint = Vector2.new(0, 0.5)
    content_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    content_4.BackgroundTransparency = 1.000
    content_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
    content_4.BorderSizePixel = 0
    content_4.Position = UDim2.new(0, 30, 0.5, 0)
    content_4.Size = UDim2.new(0.75, 0, 1, 0)
    content_4.Font = Enum.Font.SourceSans
    content_4.Text = "error_label"
    content_4.TextColor3 = Color3.fromRGB(255, 255, 255)
    content_4.TextSize = 14.000
    content_4.TextXAlignment = Enum.TextXAlignment.Left

    --info_label
    local info_label = Instance.new("TextButton", content_holder)
    Instance.new("UICorner", info_label)
    local button_icon_3 = Instance.new("ImageLabel", info_label)
    local content_5 = Instance.new("TextLabel", info_label)
    info_label.Name = "info_label"
    info_label.BackgroundColor3 = Color3.fromRGB(0, 0, 255)
    info_label.BackgroundTransparency = 0.700
    info_label.BorderColor3 = Color3.fromRGB(0, 0, 0)
    info_label.BorderSizePixel = 0
    info_label.Size = UDim2.new(0.975000024, 0, 0, 25)
    info_label.AutoButtonColor = false
    info_label.Font = Enum.Font.SourceSans
    info_label.Text = ""
    info_label.TextColor3 = Color3.fromRGB(0, 0, 0)
    info_label.TextSize = 14.000
    button_icon_3.Name = "button_icon"
    button_icon_3.AnchorPoint = Vector2.new(0, 0.5)
    button_icon_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    button_icon_3.BackgroundTransparency = 1.000
    button_icon_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
    button_icon_3.BorderSizePixel = 0
    button_icon_3.Position = UDim2.new(0, 5, 0.5, 0)
    button_icon_3.Size = UDim2.new(0, 20, 0, 20)
    button_icon_3.Image = "rbxassetid://3926305904"
    button_icon_3.ImageRectOffset = Vector2.new(204, 444)
    button_icon_3.ImageRectSize = Vector2.new(36, 36)
    content_5.Name = "content"
    content_5.AnchorPoint = Vector2.new(0, 0.5)
    content_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    content_5.BackgroundTransparency = 1.000
    content_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
    content_5.BorderSizePixel = 0
    content_5.Position = UDim2.new(0, 30, 0.5, 0)
    content_5.Size = UDim2.new(0.75, 0, 1, 0)
    content_5.Font = Enum.Font.SourceSans
    content_5.Text = "Information"
    content_5.TextColor3 = Color3.fromRGB(255, 255, 255)
    content_5.TextSize = 14.000
    content_5.TextXAlignment = Enum.TextXAlignment.Left

    --textbox
    local textbox = Instance.new("TextLabel", content_holder)
    Instance.new("UICorner", textbox)
    local ImageButton_3 = Instance.new("ImageButton", textbox)
    local textbox_icon = Instance.new("ImageLabel", textbox)
    local content_6 = Instance.new("TextLabel", textbox)
    local textbox_input = Instance.new("TextBox", textbox)
    Instance.new("UICorner", textbox_input)
    textbox.Name = "textbox"
    textbox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    textbox.BackgroundTransparency = 0.700
    textbox.BorderColor3 = Color3.fromRGB(0, 0, 0)
    textbox.BorderSizePixel = 0
    textbox.Size = UDim2.new(0.975000024, 0, 0, 25)
    textbox.Font = Enum.Font.SourceSans
    textbox.Text = ""
    textbox.TextColor3 = Color3.fromRGB(255, 255, 255)
    textbox.TextSize = 14.000
    textbox.TextXAlignment = Enum.TextXAlignment.Left
    ImageButton_3.AnchorPoint = Vector2.new(1, 0.5)
    ImageButton_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ImageButton_3.BackgroundTransparency = 1.000
    ImageButton_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ImageButton_3.BorderSizePixel = 0
    ImageButton_3.Position = UDim2.new(1, -5, 0.5, 0)
    ImageButton_3.Size = UDim2.new(0, 20, 0, 20)
    ImageButton_3.Image = "rbxassetid://3926305904"
    ImageButton_3.ImageRectOffset = Vector2.new(764, 764)
    ImageButton_3.ImageRectSize = Vector2.new(36, 36)
    textbox_icon.Name = "textbox_icon"
    textbox_icon.AnchorPoint = Vector2.new(0, 0.5)
    textbox_icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    textbox_icon.BackgroundTransparency = 1.000
    textbox_icon.BorderColor3 = Color3.fromRGB(0, 0, 0)
    textbox_icon.BorderSizePixel = 0
    textbox_icon.Position = UDim2.new(0, 5, 0.5, 0)
    textbox_icon.Size = UDim2.new(0, 20, 0, 20)
    textbox_icon.Image = "rbxassetid://3926305904"
    textbox_icon.ImageRectOffset = Vector2.new(324, 604)
    textbox_icon.ImageRectSize = Vector2.new(36, 36)
    content_6.Name = "content"
    content_6.AnchorPoint = Vector2.new(0, 0.5)
    content_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    content_6.BackgroundTransparency = 1.000
    content_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
    content_6.BorderSizePixel = 0
    content_6.Position = UDim2.new(0, 30, 0.5, 0)
    content_6.Size = UDim2.new(0.349999994, 0, 1, 0)
    content_6.Font = Enum.Font.SourceSans
    content_6.Text = "Textbox example"
    content_6.TextColor3 = Color3.fromRGB(255, 255, 255)
    content_6.TextSize = 14.000
    content_6.TextXAlignment = Enum.TextXAlignment.Left
    textbox_input.Name = "textbox_input"
    textbox_input.AnchorPoint = Vector2.new(1, 0.5)
    textbox_input.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    textbox_input.BackgroundTransparency = 0.700
    textbox_input.BorderColor3 = Color3.fromRGB(0, 0, 0)
    textbox_input.BorderSizePixel = 0
    textbox_input.Position = UDim2.new(0, 315, 0.5, 0)
    textbox_input.Size = UDim2.new(0, 70, 0, 20)
    textbox_input.Font = Enum.Font.SourceSans
    textbox_input.Text = ""
    textbox_input.TextColor3 = Color3.fromRGB(0, 0, 0)
    textbox_input.TextSize = 14.000


    --slider
    local slider = Instance.new("TextLabel", content_holder)
    Instance.new("UICorner", slider)
    local ImageButton_4 = Instance.new("ImageButton", slider)
    local slider_icon = Instance.new("ImageLabel", slider)
    local content_7 = Instance.new("TextLabel", slider)
    local SliderBase = Instance.new("Frame", slider)
    Instance.new("UICorner", SliderBase)
    local Scale = Instance.new("Frame", SliderBase)
    Instance.new("UICorner", Scale)
    local UIGradient_2 = Instance.new("UIGradient", Scale)
    local Point = Instance.new("Frame", Scale)
    Instance.new("UICorner", Point)
    local UIGradient_3 = Instance.new("UIGradient", Point)
    local slider_input = Instance.new("TextLabel", slider)
    slider.Name = "slider"
    slider.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    slider.BackgroundTransparency = 0.700
    slider.BorderColor3 = Color3.fromRGB(0, 0, 0)
    slider.BorderSizePixel = 0
    slider.Size = UDim2.new(0.975000024, 0, 0, 25)
    slider.Font = Enum.Font.SourceSans
    slider.Text = ""
    slider.TextColor3 = Color3.fromRGB(255, 255, 255)
    slider.TextSize = 14.000
    slider.TextXAlignment = Enum.TextXAlignment.Left
    ImageButton_4.AnchorPoint = Vector2.new(1, 0.5)
    ImageButton_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ImageButton_4.BackgroundTransparency = 1.000
    ImageButton_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ImageButton_4.BorderSizePixel = 0
    ImageButton_4.Position = UDim2.new(1, -5, 0.5, 0)
    ImageButton_4.Size = UDim2.new(0, 20, 0, 20)
    ImageButton_4.Image = "rbxassetid://3926305904"
    ImageButton_4.ImageRectOffset = Vector2.new(764, 764)
    ImageButton_4.ImageRectSize = Vector2.new(36, 36)
    slider_icon.Name = "slider_icon"
    slider_icon.AnchorPoint = Vector2.new(0, 0.5)
    slider_icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    slider_icon.BackgroundTransparency = 1.000
    slider_icon.BorderColor3 = Color3.fromRGB(0, 0, 0)
    slider_icon.BorderSizePixel = 0
    slider_icon.Position = UDim2.new(0, 5, 0.5, 0)
    slider_icon.Size = UDim2.new(0, 20, 0, 20)
    slider_icon.Image = "rbxassetid://11295283482"
    content_7.Name = "content"
    content_7.AnchorPoint = Vector2.new(0, 0.5)
    content_7.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    content_7.BackgroundTransparency = 1.000
    content_7.BorderColor3 = Color3.fromRGB(0, 0, 0)
    content_7.BorderSizePixel = 0
    content_7.Position = UDim2.new(0, 30, 0.5, 0)
    content_7.Size = UDim2.new(0.319999993, 0, 1, 0)
    content_7.Font = Enum.Font.SourceSans
    content_7.Text = "Slider"
    content_7.TextColor3 = Color3.fromRGB(255, 255, 255)
    content_7.TextSize = 14.000
    content_7.TextXAlignment = Enum.TextXAlignment.Left
    SliderBase.Name = "SliderBase"
    SliderBase.AnchorPoint = Vector2.new(1, 0.5)
    SliderBase.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    SliderBase.BackgroundTransparency = 0.700
    SliderBase.BorderColor3 = Color3.fromRGB(0, 0, 0)
    SliderBase.BorderSizePixel = 0
    SliderBase.Position = UDim2.new(0, 315, 0.5, 0)
    SliderBase.Size = UDim2.new(0.425000012, 0, 0, 20)
    Scale.Name = "Scale"
    Scale.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Scale.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Scale.BorderSizePixel = 0
    Scale.Size = UDim2.new(0.5, 0, 1, 0)
    UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.00), NumberSequenceKeypoint.new(1.00, 0.90)}
    Point.Name = "Point"
    Point.AnchorPoint = Vector2.new(1, 0.5)
    Point.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Point.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Point.BorderSizePixel = 0
    Point.Position = UDim2.new(1, 0, 0.5, 0)
    Point.Size = UDim2.new(0, 20, 0, 20)
    UIGradient_3.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.10), NumberSequenceKeypoint.new(1.00, 0.70)}
    slider_input.Name = "slider_input"
    slider_input.AnchorPoint = Vector2.new(0, 0.5)
    slider_input.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    slider_input.BackgroundTransparency = 1.000
    slider_input.BorderColor3 = Color3.fromRGB(0, 0, 0)
    slider_input.BorderSizePixel = 0
    slider_input.Position = UDim2.new(0.300000012, 0, 0.5, 0)
    slider_input.Size = UDim2.new(0, 60, 0, 20)
    slider_input.Font = Enum.Font.SourceSans
    slider_input.Text = "16"
    slider_input.TextColor3 = Color3.fromRGB(255, 255, 255)
    slider_input.TextSize = 15.000
    slider_input.TextXAlignment = Enum.TextXAlignment.Right
]]
